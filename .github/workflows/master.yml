# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Master branch CI/CD workflow

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout project...
      uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Cache Maven packages... (for future builds, it automatically invalidate cache with a .pom hash)
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Building and testing...
      run: mvn -B package -D skipTests
    # Build Docker Images for different architectures https://community.arm.com/developer/tools-software/tools/b/tools-software-ides-blog/posts/getting-started-with-docker-for-arm-on-linux  
    - name: Set up Docker Buildx (Used to build Docker Images for different architectures e.g. linux/arm/v7)
      id: buildx
      uses: crazy-max/ghaction-docker-buildx@v1
      with:
        version: latest
    - name: Available platforms
      run: echo ${{ steps.buildx.outputs.platforms }}
    - name: Login to Container Images Registry...
      run: echo "${{ secrets.DOCKER_HUB_REGISTRY_PASSWORD }}" | docker login docker.io -u "${{ secrets.DOCKER_HUB_REGISTRY_USERNAME }}" --password-stdin
    - name: Building Docker Image
      run: mvn -B docker:build
    - name: Publish Docker Image (built previously)
      run: mvn -B docker:push
    - name: Install SSH key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSH_TUNNEL_USER_KEY }}
        known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }}
    - name: Open Tunnel to K3S
      run: ssh -p "${{ secrets.SSH_PORT }}" "${{ secrets.SSH_CONNECTION }}" -N -L 25000:pi1:6443
    - uses: azure/k8s-set-context@v1
      with:
        method: kubeconfig
        kubeconfig: "${{ secrets.K3S_KUBECONFIG }}"
      id: setcontext
    - uses: azure/k8s-deploy@v1
      with:
        manifests: |
            ./kubernetes/vehicle-mngr-deploy.yaml
        kubectl-version: 'latest'